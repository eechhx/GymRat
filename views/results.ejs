<!DOCTYPE html>
<html>

  <head>
      <!-- Load TensorFlow.js -->
      <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.11.7"></script>
      <!-- Load Posenet -->
      <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/posenet@0.1.2"></script>
      <!-- BootStrap -->
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
      <script src="https://use.fontawesome.com/releases/v5.0.8/js/all.js"></script>
      <link href="/style2.css" rel="stylesheet">
  </head>

  <body>
      <img id='squat'/>
  </body>

  <script>
  
      var _img = document.getElementById('squat');
      var newImg = new Image;
      newImg.onload = function() {
        _img.src = this.src;
      }
      var imgPath = '<%= path %>'.substring(6);
      console.log(imgPath);
      newImg.src = imgPath;

      var imageScaleFactor = 0.5;
      var outputStride = 16;
      var flipHorizontal = false;

      var imageElement = document.getElementById('squat');

      posenet.load().then(function(net){
        return net.estimateSinglePose(imageElement, imageScaleFactor, flipHorizontal, outputStride)
      }).then(function(pose){
        console.log(pose);
        var parsed_data = JSON.parse(pose);
      }).then(function(parsed_data){
        // [0,1] = [x,y]
        // Get center of balance points
        left_wrist = new Array(parsed_data.keypoints[9].position.x, parsed_data.keypoints[9]position.y);
        left_ankle = new Array(parsed_data.keypoints[15].position.x, parsed_data.keypoints[15]position.y);

        // Get depth points
        left_knee = new Array(parsed_data.keypoints[13].position.x, parsed_data.keypoints[13]position.y);
        left_hip = new Array(parsed_data.keypoints[11].position.x, parsed_data.keypoints[11]position.y);

        return checkValues(left_wrist, left_ankle, left_hip, left_knee)
      });

      // Determine if points fall within margin of error
      function checkValues(left_wrist, left_ankle, left_hip, left_knee) {
        // Check bar and feet alignment
        if (Math.abs(left_wrist[0]-left_ankle[0]) > 0) {
          console.log("You need to align your bar with the middle of your feet for proper balance!");
          return false;     
        }
        else
        {
          // Check depth of motion
          if (left_hip[1]-left_knee[1] > 0) {
            console.log("You need to lower your hips below your knees for a full range of motion!");
            return false;
          }
        }
        return true;
      }

    </script>

</html>
